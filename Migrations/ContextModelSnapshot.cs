// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzeriaOnline.Data;

namespace PizzeriaOnline.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("PizzeriaOnline.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "sos pomidorowy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ser mozzarella"
                        });
                });

            modelBuilder.Entity("PizzeriaOnline.Models.ComponentsProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComponentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ProductId");

                    b.ToTable("ComponentsProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComponentId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ComponentId = 2,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("PizzeriaOnline.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasDelivery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Lubenia",
                            HasDelivery = true,
                            LastName = "Golda",
                            Name = "Kamil",
                            PhoneNumber = "789456123",
                            Price = 555.0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("PizzeriaOnline.Models.PricesForSizesProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PricesForSizesProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 13.5,
                            ProductId = 1,
                            Size = 0
                        },
                        new
                        {
                            Id = 2,
                            Price = 18.0,
                            ProductId = 1,
                            Size = 1
                        },
                        new
                        {
                            Id = 3,
                            Price = 28.0,
                            ProductId = 1,
                            Size = 2
                        });
                });

            modelBuilder.Entity("PizzeriaOnline.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Availability")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageMimeType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PhotoFile")
                        .HasColumnType("BLOB");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = true,
                            ImageMimeType = "image/jpeg",
                            ImageName = "margherita.jpg",
                            Title = "MARGHERITA"
                        });
                });

            modelBuilder.Entity("PizzeriaOnline.Models.ProductsInOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("PizzeriaOnline.Models.ComponentsProduct", b =>
                {
                    b.HasOne("PizzeriaOnline.Models.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaOnline.Models.Product", null)
                        .WithMany("Components")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");
                });

            modelBuilder.Entity("PizzeriaOnline.Models.PricesForSizesProduct", b =>
                {
                    b.HasOne("PizzeriaOnline.Models.Product", null)
                        .WithMany("PricesForSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzeriaOnline.Models.ProductsInOrder", b =>
                {
                    b.HasOne("PizzeriaOnline.Models.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaOnline.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PizzeriaOnline.Models.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PizzeriaOnline.Models.Product", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("PricesForSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
