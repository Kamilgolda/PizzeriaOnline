@model Task<IEnumerable<PizzeriaOnline.Models.Product>>

@{
    ViewData["Title"] = "Home Page";
}

<div class="pizza-list">

    @foreach (var item in Model.Result)
    {
    <div class="pizza-item">
        @Html.DisplayFor(modelItem => item.Title)
        <img class="photo-pizza" src="@Url.Action("GetImage", "Home", new { Id = item.Id })" />

        <div class="content">
            <br />
            <div class="font-weight-bold">
                @foreach (var component in item.Components)
                {
                    <span>
                        @Html.DisplayFor(model => component.Component.Name),
                    </span>
                }
            </div>
            <br />
            <div class="content-priceForSize">
                @foreach (var priceForSize in item.PricesForSizes)
                {
                    <div>
                        <span class="font-weight-bold">@Html.DisplayFor(model => priceForSize.Size) </span> :
                        @Html.DisplayFor(model => priceForSize.Price) zł

                    </div>
                }
            </div>
            <div class="item_to_cart">
                <button style="background:#000; color:#fff;">Dodaj do koszyka</button>
                <select>
                    @foreach (var priceForSize in item.PricesForSizes)
                    {
                    <option>@Html.DisplayFor(model => priceForSize.Size)</option>
                    }
                    </select>
            </div>
            <p>
                @Html.DisplayNameFor(modelItem => item.Availability)
                @Html.DisplayFor(modelItem => item.Availability)
            </p>
        </div>
    </div>
    }
</div>
